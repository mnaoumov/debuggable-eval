import type { BuildOptions } from 'esbuild';

import { context } from 'esbuild';
import {
  CliTaskResult,
  wrapCliTask
} from 'obsidian-dev-utils/scripts/CliUtils';

await wrapCliTask(async () => {
  const buildOptions: BuildOptions = {
    banner: {
      js: '/* THIS IS A GENERATED/BUNDLED FILE BY ESBUILD */'
    },
    bundle: true,
    entryPoints: ['src/index.ts'],
    format: 'cjs',
    logLevel: 'info',
    outdir: 'dist/lib',
    outExtension: {
      '.js': '.cjs'
    },
    platform: 'node',
    sourcemap: 'inline',
    target: 'ESNext',
    treeShaking: true
  };

  const buildContext = await context(buildOptions);
  const result = await buildContext.rebuild();
  const isSuccess = result.errors.length == 0 && result.warnings.length == 0;
  return CliTaskResult.Success(isSuccess);
});
